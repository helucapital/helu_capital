import { createStitches } from "@stitches/react";

import { whiteA, blackA } from "@radix-ui/colors";
import { utils } from "./utils";

const {
  styled,
  css,
  globalCss,
  keyframes,
  theme,
  getCssText,
  createTheme,
  config,
} = createStitches({
  theme: {
    colors: {
      ...whiteA,
      ...blackA,
      primary: "#11181D",
      primary_dark: "#90854c",
      secondary: "#5F99B0",
      secondary_dark: "#497586",
      muted: "#f6f6f6",
      dark: "#11181D",

      // Semantic colors
      hiContrast: "$slate12",
      loContrast: "$slate1",
      canvas: "hsl(0 0% 93%)",
      panel: "white",
      transparentPanel: "hsl(0 0% 0% / 97%)",
      shadowLight: "hsl(206 22% 7% / 35%)",
      shadowDark: "hsl(206 22% 7% / 20%)",
    },
    fonts: {
      body: "Untitled Sans, -apple-system, system-ui, sans-serif",
      mono: "SÃ¶hne Mono, menlo, monospace",
    },
    fontSizes: {
      0: 0,
      1: "12px",
      2: "16px",
      3: "18px",
      4: "21px",
      5: "25px",
      6: "30px",
      7: "36px",
      8: "44px",
      9: "52px",
      10: "66px",
    },
    fontWeights: {
      1: "100",
      2: "200",
      3: "300",
      4: "400",
      5: "500",
      6: "600",
      7: "700",
      8: "800",
      9: "900",
      10: "$9",
      normal: "$4",
      bold: "$7",
      extraBold: "$9",
    },
    lineHeights: {
      0: 0,
      1: "12px",
      2: "15px",
      3: "18px",
      4: "21px",
      5: "25px",
      6: "30px",
      7: "36px",
      8: "43px",
      9: "52px",
      10: "82px",
    },
    shadows: {
      1: "rgba(0, 0, 0, 0.1) 0px 1px 3px 0px, rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;",
      2: "rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;",
      3: "rgba(0, 0, 0, 0.1) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;",
      4: "rgba(0, 0, 0, 0.25) 0px 25px 50px -12px;",
      5: "0.2px 0.1px 0.3px hsl(0deg 0% 0% / 0), 0.4px 0.3px 0.8px hsl(0deg 0% 0% / 0.1), 0.8px 0.7px 1.6px hsl(0deg 0% 0% / 0.19)",
      6: "0.2px 0.1px 0.3px hsl(0deg 0% 0% / 0), 0.8px 0.7px 1.6px hsl(0deg 0% 0% / 0.05), 1.3px 1.2px 2.7px hsl(0deg 0% 0% / 0.1), 2.3px 2px 4.6px hsl(0deg 0% 0% / 0.14), 3.9px 3.5px 7.9px hsl(0deg 0% 0% / 0.19)",
      7: "0.2px 0.1px 0.3px hsl(0deg 0% 0% / 0), 1.9px 1.7px 3.8px hsl(0deg 0% 0% / 0.02), 3.4px 3px 6.8px hsl(0deg 0% 0% / 0.04), 4.8px 4.3px 9.7px hsl(0deg 0% 0% / 0.07), 6.4px 5.6px 12.8px hsl(0deg 0% 0% / 0.09), 8.3px 7.3px 16.6px hsl(0deg 0% 0% / 0.11), 10.7px 9.5px 21.5px hsl(0deg 0% 0% / 0.13), 13.8px 12.2px 27.6px hsl(0deg 0% 0% / 0.16), 17.8px 15.8px 35.7px hsl(0deg 0% 0% / 0.18), 22.9px 20.3px 45.9px hsl(0deg 0% 0% / 0.2)",
    },
    space: {
      0: "4px",
      1: "8px",
      2: "12px",
      3: "16px",
      4: "24px",
      5: "32px",
      6: "40px",
      7: "48px",
      8: "56px",
      9: "64px",
      10: "72px",
      11: "88px",
      12: "100px",
    },
    sizes: {
      0: 0,
      1: "480px",
      2: "768px",
      3: "1024px",
      4: "1350px",
      5: "1600px",
    },
    radii: {
      1: "4px",
      2: "6px",
      3: "8px",
      4: "0.8rem",
      round: "50%",
      pill: "9999px",
    },
    zIndices: {
      0: 0,
      1: "100",
      2: "200",
      3: "300",
      4: "400",
      max: "999",
    },
  },
  media: {
    bp1: "(max-width: 520px)",
    bp2: "(max-width: 900px)",
    bp3: "(max-width: 1200px)",
    bp4: "(max-width: 1800px)",
    // adds 500 to each breakpoint to makeup for the side bar width
    motion: "(prefers-reduced-motion)",
    hover: "(any-hover: hover)",
    dark: "(prefers-color-scheme: dark)",
    light: "(prefers-color-scheme: light)",
  },
  utils: {
    ...utils,
  },
});

export const breakpoints = {
  default: (rule) => rule,
  bp1: (rule) => `@media (min-width: 520px) { ${rule} }`,
  bp2: (rule) => `@media (min-width: 900px) { ${rule} }`,
  bp3: (rule) => `@media (min-width: 1200px) { ${rule} }`,
  bp4: (rule) => `@media (min-width: 1800px) { ${rule} }`,
  motion: (rule) => `@media (prefers-reduced-motion) { ${rule} }`,
  hover: (rule) => `@media (hover: hover) { ${rule} }`,
  dark: (rule) => `@media (prefers-color-scheme: dark) { ${rule} }`,
  light: (rule) => `@media (prefers-color-scheme: light) { ${rule} }`,
};

export { styled, css, globalCss, keyframes, theme, getCssText, createTheme };
